{"version":3,"sources":["redux/utils/messages.js","redux/utils/types.js","redux/utils/baseURL.js","redux/actions/authentication.js","components/Header.js","mainLayout/MainLayout.js","screens/HomePage.js","components/CommonComponents.js","screens/Login.js","redux/utils/Configuration.js","screens/SignUp.js","screens/Dashboard.js","redux/actions/loadItems.js","screens/NotFound.js","routing/BaseRoutes.js","redux/reducers/userAuth.js","redux/reducers/LoadIInitialltems.js","redux/reducers/messages/messages.js","redux/reducers/errors/errors.js","redux/reducers/index.js","redux/store/store.js","App.js","serviceWorker.js","index.js"],"names":["returnErrors","msg","status","data","type","payload","baseURL","removeItemOnLoad","dispatch","mapDispatchToProps","logOutUser","connect","state","isLoggedInUser","userAuth","accessToken","props","className","to","onClick","history","useHistory","console","log","location","pathname","push","children","Fragment","Button","label","rest","authLogin","username","password","getState","body","axios","post","JSON","stringify","headers","then","res","catch","err","response","isErrorPresent","errors","message","isRegisteredUser","React","useState","error","setError","useEffect","onSubmit","e","preventDefault","FormData","target","get","trim","placeholder","name","autoComplete","authSignup","email","table_heading","title","key","loadItems","page","userName","homeItems","LoadIInitialltems","justify","map","item","index","id","src","thumbnailUrl","alt","NotFound","exact","path","component","HomePage","Login","SignUp","Dashboard","initialState","isLoading","combineReducers","action","messages","persistConfig","storage","whitelist","persistedReducer","persistReducer","rootReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","App","loading","BaseRoutes","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a4267c5.chunk.js","sourcesContent":["import { CREATE_MESSAGE, GET_ERRORS } from \"./types\";\n\n// CREATE MESSAGE\nexport const createMessage = (msg) => {\n  return {\n    type: CREATE_MESSAGE,\n    payload: msg,\n  };\n};\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status, data) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status, data },\n  };\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\r\nexport const REMOVE_EXISTING_ERRORS = \"REMOVE_EXISTING_ERRORS\";\r\n\r\nexport const USER_REGISTRATION_START = \"USER_REGISTRATION_START\";\r\nexport const USER_REGISTRATION_SUCCESS = \"USER_REGISTRATION_SUCCESS\";\r\nexport const USER_REGISTRATION_FAIL = \"USER_REGISTRATION_FAIL\";\r\n\r\nexport const USER_LOGIN_START = \"USER_LOGIN_START\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGGED_IN = \"USER_LOGGED_IN\";\r\nexport const USER_LOGED_OUT = \"USER_LOGED_OUT\";\r\n\r\nexport const LOAD_ITEMS_START = \"LOAD_ITEMS_START\";\r\nexport const LOAD_ITEMS_SUCCESS = \"LOAD_ITEMS_SUCCESS\";\r\nexport const LOAD_ITEMS_FAIL = \"LOAD_ITEMS_FAIL\";\r\nexport const REMOVE_STATUS = \"REMOVE_STATUS\";\r\n\r\nexport const REMOVE_ITEM_FROM_REDUX = \"REMOVE_ITEM_FROM_REDUX\";\r\n","export const baseURL = \"http://localhost:8080/api\";\r\n","import axios from \"axios\";\r\nimport { returnErrors } from \"../utils/messages\";\r\nimport { tokenConfig } from \"../utils/Configuration\";\r\nimport {\r\n  USER_REGISTRATION_START,\r\n  USER_REGISTRATION_SUCCESS,\r\n  USER_REGISTRATION_FAIL,\r\n  USER_LOGIN_START,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGED_OUT,\r\n  REMOVE_STATUS,\r\n  REMOVE_ITEM_FROM_REDUX,\r\n} from \"../utils/types\";\r\n\r\nimport { baseURL } from \"../utils/baseURL\";\r\n\r\nexport const authSignup = (username, email, password) => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const body = {\r\n    username: username,\r\n    email: email,\r\n    password: password,\r\n  };\r\n  dispatch({\r\n    type: USER_REGISTRATION_START,\r\n  });\r\n  axios\r\n    .post(`${baseURL}/auth/signup/`, JSON.stringify(body), {\r\n      headers: tokenConfig(),\r\n    })\r\n\r\n    .then((res) => {\r\n      console.log(\"res\", res.status);\r\n      dispatch({\r\n        type: USER_REGISTRATION_SUCCESS,\r\n        payload: { data: res.data, status: res.status },\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n      dispatch({\r\n        type: USER_REGISTRATION_FAIL,\r\n      });\r\n    });\r\n};\r\n\r\nexport const authLogin = (username, password) => (dispatch, getState) => {\r\n  const body = {\r\n    username: username,\r\n    password: password,\r\n  };\r\n  dispatch({\r\n    type: USER_LOGIN_START,\r\n  });\r\n  axios\r\n    .post(`${baseURL}/auth/signin/`, JSON.stringify(body), {\r\n      headers: tokenConfig(),\r\n    })\r\n    .then((res) => {\r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n      dispatch({\r\n        type: USER_LOGIN_FAIL,\r\n      });\r\n    });\r\n};\r\n\r\nexport const logOutUser = () => (dispatch) => {\r\n  dispatch({\r\n    type: USER_LOGED_OUT,\r\n  });\r\n};\r\n\r\nexport const removeStatus = () => (dispatch) => {\r\n  dispatch({\r\n    type: REMOVE_STATUS,\r\n  });\r\n};\r\n\r\nexport const removeItemOnLoad = () => (dispatch) => {\r\n  dispatch({\r\n    type: REMOVE_ITEM_FROM_REDUX,\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logOutUser } from \"../redux/actions/authentication\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n  const handleLogOutUser = () => {\r\n    if (props.isLoggedInUser) {\r\n      props.logOutUser();\r\n    }\r\n  };\r\n  if (!props.isLoggedInUser) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"header\">\r\n      <p>\r\n        <Link to=\"/\">Home</Link>\r\n      </p>\r\n\r\n      <p onClick={handleLogOutUser}>Logout</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isLoggedInUser: state.userAuth.data && state.userAuth.data.accessToken,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  logOutUser,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Header from \"../components/Header\";\r\nimport \"../assets/mainLayout.css\";\r\n\r\nfunction MainLayout(props) {\r\n  let history = useHistory();\r\n  if (!props.isLoggedInUser) {\r\n    console.log(history.location.pathname);\r\n    if (history.location.pathname === \"/registration\") {\r\n      history.push(\"/registration/\");\r\n    } else {\r\n      history.push(\"/login/\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"mainLayout\">\r\n      <div className=\"site-layout\">\r\n        <Header />\r\n\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isLoggedInUser: state.userAuth.data && state.userAuth.data.accessToken,\r\n  };\r\n}\r\nconst mapDispatchToProps = {};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DefaultLoading } from \"../components/DefaultLoading\";\r\nimport \"../assets/mainLayout.css\";\r\n\r\nfunction HomePage(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"main\">\r\n        <div className=\"topBar\">\r\n          <p>Landing Page</p>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nconst mapDispatchToProps = {};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React from \"react\";\r\nimport propTypes from 'prop-types';\r\n\r\n\r\nexport const Button = ({ label, onClick, ...rest }) => (\r\n    <button\r\n        onClick={onClick}\r\n        {...rest}\r\n    >\r\n        {label}\r\n    </button>\r\n);\r\nButton.propTypes = {\r\n    label: propTypes.string.isRequired,\r\n    onClick: propTypes.func,\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { authLogin, removeItemOnLoad } from \"../redux/actions/authentication\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../components/CommonComponents\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DefaultLoading } from \"../components/DefaultLoading\";\r\n\r\nfunction Login(props) {\r\n  const [error, setError] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    props.removeItemOnLoad();\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n    if (\r\n      data.get(\"username\").trim() === \"\" ||\r\n      data.get(\"password\").trim() === \"\"\r\n    ) {\r\n      setError(\"Please fill the fields\");\r\n    } else {\r\n      setError(null);\r\n      props.authLogin(data.get(\"username\"), data.get(\"password\"));\r\n    }\r\n  };\r\n\r\n  if (props.isLoggedInUser) {\r\n    history.push(\"/Dashboard/\");\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"signUp\">\r\n        <form onSubmit={handleLogin}>\r\n          <p className=\"pageTitle\">Login</p>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Username\"\r\n            name=\"username\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Password\"\r\n            name=\"password\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <Button label=\"Submit\" />\r\n\r\n          {error ? <p className=\"errorMsg\">{error}</p> : null}\r\n\r\n          {props.isErrorPresent ? (\r\n            <p className=\"errorMsg\">{props.isErrorPresent}</p>\r\n          ) : null}\r\n\r\n          {props.isRegisteredUser === 200 ? (\r\n            <p className=\"successAccount\">\r\n              Account Created Succesfully, Please login now\r\n            </p>\r\n          ) : (\r\n            <Link to=\"/registration/\" className=\"message\">\r\n              Don't have account? Create now!!!\r\n            </Link>\r\n          )}\r\n\r\n          <p className=\"request\">\r\n            Please login or create new account to view page content\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isLoggedInUser: state.userAuth.data && state.userAuth.data.accessToken,\r\n    isErrorPresent: state.errors.msg && state.errors.msg.message,\r\n    isRegisteredUser: state.userAuth.status,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  authLogin,\r\n  removeItemOnLoad,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","export const tokenConfig = () => {\r\n  const userToken = null;\r\n  if (userToken) {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-access-token\": `${JSON.parse(userToken)}`,\r\n    };\r\n    return headers;\r\n  } else {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n    return headers;\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSignup, removeItemOnLoad } from \"../redux/actions/authentication\";\r\nimport { Button } from \"../components/CommonComponents\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DefaultLoading } from \"../components/DefaultLoading\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction SignUp(props) {\r\n  const [error, setError] = useState(null);\r\n  let history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    props.removeItemOnLoad();\r\n  }, []);\r\n\r\n  const handleRegistration = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n    if (\r\n      data.get(\"username\").trim() === \"\" ||\r\n      data.get(\"email\").trim() === \"\" ||\r\n      data.get(\"password\").trim() === \"\"\r\n    ) {\r\n      setError(\"Please fill all the fields\");\r\n    } else {\r\n      setError(null);\r\n      props.authSignup(\r\n        data.get(\"username\"),\r\n        data.get(\"email\"),\r\n        data.get(\"password\")\r\n      );\r\n    }\r\n  };\r\n\r\n  if (props.isRegisteredUser === 200) {\r\n    history.push(\"/login/\");\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"signUp\">\r\n        <form onSubmit={handleRegistration}>\r\n          <p className=\"pageTitle\">SignUp</p>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Username\"\r\n            name=\"username\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Email\"\r\n            name=\"email\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Password\"\r\n            name=\"password\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <Button label=\"Submit\" />\r\n          {error ? <p className=\"errorMsg\">{error}</p> : null}\r\n          {props.isErrorPresent ? (\r\n            <p className=\"errorMsg\">{props.isErrorPresent}</p>\r\n          ) : null}\r\n\r\n          <Link to=\"/login/\" className=\"message\">\r\n            Already have account? Login here\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isRegisteredUser: state.userAuth.status,\r\n\r\n    isErrorPresent: state.errors.msg && state.errors.msg.message,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  authSignup,\r\n  removeItemOnLoad,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadItems } from \"../redux/actions/loadItems\";\r\nimport { DefaultLoading } from \"../components/DefaultLoading\";\r\n\r\nconst table_heading = [\r\n  {\r\n    title: \"Product ID\",\r\n    key: 1,\r\n  },\r\n  {\r\n    title: \"Title\",\r\n    key: 2,\r\n  },\r\n\r\n  {\r\n    title: \"Image\",\r\n    key: 3,\r\n  },\r\n];\r\n\r\nfunction Dashboard(props) {\r\n  React.useEffect(() => {\r\n    props.loadItems();\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"main\">\r\n        <div className=\"topBar\">\r\n          <p className=\"pageTitle Dashboard\">Dashboard</p>\r\n          <p className=\"guest\">Welcome, {props.userName && props.userName}</p>\r\n\r\n          <div justify=\"center\" className=\"main_\">\r\n            <div className=\"table_main\">\r\n              <table className=\"table_inner\">\r\n                <thead>\r\n                  <tr>\r\n                    {table_heading.map((item, key) => (\r\n                      <th key={key}>{item.title}</th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {props.homeItems &&\r\n                    props.homeItems.map((item, index) => (\r\n                      <tr key={item.id}>\r\n                        <td>{item.id}</td>\r\n                        <td>{item.title}</td>\r\n                        <td>\r\n                          <img\r\n                            src={item.thumbnailUrl}\r\n                            alt={item.title}\r\n                            title={item.title}\r\n                            className=\"table_data_image\"\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  )\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    userName: state.userAuth.data && state.userAuth.data.username,\r\n    isLoggedInUser: state.userAuth.data && state.userAuth.data.accessToken,\r\n    homeItems: state.LoadIInitialltems.data,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  loadItems,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n","import axios from \"axios\";\r\nimport { returnErrors } from \"../utils/messages\";\r\nimport { tokenConfig } from \"../utils/Configuration\";\r\nimport {\r\n  LOAD_ITEMS_START,\r\n  LOAD_ITEMS_SUCCESS,\r\n  LOAD_ITEMS_FAIL,\r\n} from \"../utils/types\";\r\n\r\nexport const baseURL2 = \"http://jsonplaceholder.typicode.com/photos\";\r\n\r\nexport const loadItems = (page) => (dispatch) => {\r\n  dispatch({ type: LOAD_ITEMS_START });\r\n  axios\r\n    .get(`${baseURL2}?_start=${0}&_limit=20`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: LOAD_ITEMS_SUCCESS,\r\n        payload: res,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: LOAD_ITEMS_FAIL,\r\n      });\r\n    });\r\n};\r\n","import React from \"react\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>No found</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport HomePage from \"../screens/HomePage\";\r\nimport Login from \"../screens/Login\";\r\nimport SignUp from \"../screens/SignUp\";\r\nimport Dashboard from \"../screens/Dashboard\";\r\nimport NotFound from \"../screens/NotFound\";\r\n\r\nconst BaseRouter = () => (\r\n  <React.Fragment>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route exact path=\"/login/\" component={Login} />\r\n      <Route exact path=\"/registration/\" component={SignUp} />\r\n      <Route exact path=\"/dashboard/\" component={Dashboard} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </React.Fragment>\r\n);\r\n\r\nfunction mapStateToProps(state) {\r\n  return {};\r\n}\r\n\r\nconst mapDispatchToProps = {};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BaseRouter);\r\n","import {\r\n  USER_REGISTRATION_START,\r\n  USER_REGISTRATION_SUCCESS,\r\n  USER_REGISTRATION_FAIL,\r\n  USER_LOGIN_START,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGED_OUT,\r\n  REMOVE_STATUS,\r\n} from \"../utils/types\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  status: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case USER_REGISTRATION_START:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isLoading: true,\r\n      };\r\n    case USER_REGISTRATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.payload.data,\r\n        status: action.payload.status,\r\n        isLoading: false,\r\n      };\r\n\r\n    case USER_REGISTRATION_FAIL:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isLoading: false,\r\n      };\r\n\r\n    case USER_LOGIN_START:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isLoading: true,\r\n      };\r\n    case USER_LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        isLoading: false,\r\n      };\r\n\r\n    case USER_LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isLoading: false,\r\n      };\r\n    case USER_LOGED_OUT:\r\n      return {\r\n        ...state,\r\n        data: null,\r\n        status: null,\r\n        isLoading: false,\r\n      };\r\n    case REMOVE_STATUS:\r\n      return {\r\n        ...state,\r\n        status: null,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  LOAD_ITEMS_START,\r\n  LOAD_ITEMS_SUCCESS,\r\n  LOAD_ITEMS_FAIL,\r\n} from \"../utils/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_ITEMS_START:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isLoading: true,\r\n      };\r\n\r\n    case LOAD_ITEMS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isLoading: false,\r\n      };\r\n\r\n    case LOAD_ITEMS_FAIL:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isLoading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { CREATE_MESSAGE } from \"../../utils/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case CREATE_MESSAGE:\r\n            return (state = action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_ERRORS, REMOVE_ITEM_FROM_REDUX } from \"../../utils/types\";\r\n\r\nconst initialState = {\r\n  msg: {},\r\n  status: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        ...state,\r\n        msg: action.payload.msg,\r\n        status: action.payload.status,\r\n      };\r\n\r\n    case REMOVE_ITEM_FROM_REDUX:\r\n      return {\r\n        ...state,\r\n        msg: {},\r\n        status: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport userAuth from \"../reducers/userAuth\";\r\nimport LoadIInitialltems from \"../reducers/LoadIInitialltems\";\r\nimport messages from \"../reducers/messages/messages\";\r\nimport errors from \"../reducers/errors/errors\";\r\n\r\nexport default combineReducers({\r\n  userAuth,\r\n  LoadIInitialltems,\r\n  messages,\r\n  errors,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers/index\";\n\nconst initialState = {};\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"userAuth\"],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\nconst persistor = persistStore(store);\nexport { persistor, store };\n\nexport default store;\n","import React from \"react\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport MainLayout from \"./mainLayout/MainLayout\";\nimport BaseRoutes from \"./routing/BaseRoutes\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store/store\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <Router>\n            <MainLayout>\n              <BaseRoutes />\n            </MainLayout>\n          </Router>\n        </PersistGate>\n      </Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}